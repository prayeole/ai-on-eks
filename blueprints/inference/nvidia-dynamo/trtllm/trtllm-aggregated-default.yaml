# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

apiVersion: nvidia.com/v1alpha1
kind: DynamoGraphDeployment
metadata:
  name: trtllm-aggregated-default
  namespace: dynamo-cloud
spec:
  services:
    Frontend:
      livenessProbe:
        httpGet:
          path: /health
          port: 8000
        initialDelaySeconds: 60
        periodSeconds: 60
        timeoutSeconds: 30
        failureThreshold: 10
      readinessProbe:
        exec:
          command:
            - /bin/sh
            - -c
            - 'curl -s http://localhost:8000/health | jq -e ".status == \"healthy\""'
        initialDelaySeconds: 60
        periodSeconds: 60
        timeoutSeconds: 30
        failureThreshold: 10
      dynamoNamespace: trtllm-aggregated-default
      componentType: frontend
      replicas: 1
      resources:
        requests:
          cpu: "1"
          memory: "2Gi"
        limits:
          cpu: "1"
          memory: "2Gi"
      extraPodSpec:
        mainContainer:
          image: nvcr.io/nvidia/ai-dynamo/tensorrtllm-runtime:0.5.0
          workingDir: /workspace/components/backends/trtllm
          command:
            - /bin/sh
            - -c
          args:
            - "python3 -m dynamo.frontend --http-port 8000"
    TRTLLMWorker:
      envFromSecret: hf-token-secret
      livenessProbe:
        httpGet:
          path: /live
          port: 9090
        periodSeconds: 5
        timeoutSeconds: 3
        failureThreshold: 3
      readinessProbe:
        httpGet:
          path: /health
          port: 9090
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 60
      dynamoNamespace: trtllm-aggregated-default
      componentType: worker
      replicas: 1
      resources:
        requests:
          cpu: "10"
          memory: "20Gi"
          gpu: "1"
        limits:
          cpu: "10"
          memory: "20Gi"
          gpu: "1"
      extraPodSpec:
        nodeSelector:
          karpenter.sh/nodepool: g5-gpu-karpenter
        tolerations:
          - key: nvidia.com/gpu
            operator: Exists
            effect: NoSchedule
        mainContainer:
          image: nvcr.io/nvidia/ai-dynamo/tensorrtllm-runtime:0.5.0
          workingDir: /workspace/components/backends/trtllm
          startupProbe:
            httpGet:
              path: /health
              port: 9090
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 60
          command:
            - /bin/sh
            - -c
          args:
            - |
              # Create inline engine configuration
              mkdir -p /tmp/engine_configs
              cat > /tmp/engine_configs/agg.yaml << 'EOF'
              # Default TensorRT-LLM Engine Configuration
              tensor_parallel_size: 1
              moe_expert_parallel_size: 1
              enable_attention_dp: false
              max_num_tokens: 8192
              max_batch_size: 16
              trust_remote_code: true
              backend: pytorch
              enable_chunked_prefill: true

              kv_cache_config:
                free_gpu_memory_fraction: 0.85

              cuda_graph_config:
                max_batch_size: 16
              EOF

              # Start TensorRT-LLM worker
              python3 -m dynamo.trtllm --model-path Qwen/Qwen3-0.6B --served-model-name Qwen/Qwen3-0.6B --extra-engine-args /tmp/engine_configs/agg.yaml
