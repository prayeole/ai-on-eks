{{- if eq .Values.inference.framework "lws-vllm" }}
apiVersion: leaderworkerset.x-k8s.io/v1
kind: LeaderWorkerSet
metadata:
  name: {{.Values.inference.serviceName}}
  namespace: {{.Values.inference.serviceNamespace}}
  annotations:
    {{- if .Values.inference.modelServer.deployment.topologySpreadConstraints.enabled }}
    leaderworkerset.sigs.k8s.io/exclusive-topology: "topology.kubernetes.io/zone"
    {{- end }}
spec:
  replicas: {{.Values.inference.modelServer.deployment.replicas}}
  leaderWorkerTemplate:
    size: {{.Values.modelParameters.pipelineParallelSize}}
    restartPolicy: RecreateGroupOnPodRestart
    leaderTemplate:
      metadata:
        labels:
          role: leader
      spec:
        {{- if .Values.inference.modelServer.deployment.instanceType }}
        nodeSelector:
          node.kubernetes.io/instance-type: {{ .Values.inference.modelServer.deployment.instanceType }}
        {{- end }}
        containers:
          - name: vllm-leader
            image: {{.Values.inference.modelServer.image.repository}}:{{.Values.inference.modelServer.image.tag}}
            env:
              - name: HUGGING_FACE_HUB_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: hf-token
                    key: token
            command:
              - sh
              - -c
              - "bash /vllm-workspace/examples/online_serving/multi-node-serving.sh leader --ray_cluster_size=$(LWS_GROUP_SIZE);
                python3 -m vllm.entrypoints.openai.api_server --port 8080 --model {{ .Values.model }} {{ include "inference-charts.modelParameters" .  | trim -}}"
            resources:
            {{- if eq .Values.inference.accelerator "gpu" }}
            {{- toYaml .Values.inference.modelServer.deployment.resources.gpu | nindent 14 }}
            {{- end }}
            ports:
              - containerPort: 8080
            readinessProbe:
              tcpSocket:
                port: 8080
              initialDelaySeconds: 60
              periodSeconds: 10
            volumeMounts:
              - mountPath: /dev/shm
                name: dshm
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
              sizeLimit: 15Gi
    workerTemplate:
      spec:
        {{- if .Values.inference.modelServer.deployment.instanceType }}
        nodeSelector:
          node.kubernetes.io/instance-type: {{ .Values.inference.modelServer.deployment.instanceType }}
        {{- end }}
        containers:
          - name: vllm-worker
            image: {{.Values.inference.modelServer.image.repository}}:{{.Values.inference.modelServer.image.tag}}
            command:
              - sh
              - -c
              - "bash /vllm-workspace/examples/online_serving/multi-node-serving.sh worker --ray_address=$(LWS_LEADER_ADDRESS)"
            resources:
            {{- if eq .Values.inference.accelerator "gpu" }}
            {{- toYaml .Values.inference.modelServer.deployment.resources.gpu | nindent 14 }}
            {{- end }}
            env:
              - name: HUGGING_FACE_HUB_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: hf-token
                    key: token
            volumeMounts:
              - mountPath: /dev/shm
                name: dshm
        volumes:
          - name: dshm
            emptyDir:
              medium: Memory
              sizeLimit: 15Gi
---
apiVersion: v1
kind: Service
metadata:
  name: {{.Values.inference.serviceName}}-leader
  namespace: {{.Values.inference.serviceNamespace}}
spec:
  ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    leaderworkerset.sigs.k8s.io/name: {{.Values.inference.serviceName}}
    role: leader
  type: ClusterIP
{{- end }}
